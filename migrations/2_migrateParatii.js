var ParatiiToken = artifacts.require('./ParatiiToken.sol')
var Avatar = artifacts.require('./Avatar.sol')
var Registry = artifacts.require('./Registry.sol')
var SendEther = artifacts.require('./SendEther.sol')
var Videos = artifacts.require('./Videos.sol')
var Store = artifacts.require('./Store.sol')

module.exports = async function (deployer) {
  console.log('deploying contracts')
  await deployer.deploy(Registry)
  let paratiiRegistry = await Registry.deployed()

  await deployer.deploy(Avatar, paratiiRegistry.address)
  let avatar = await Avatar.deployed()
  await deployer.deploy(ParatiiToken)
  let paratiiToken = await ParatiiToken.deployed()
  await deployer.deploy(SendEther)
  let sendEther = await SendEther.deployed()
  await deployer.deploy(Videos)
  let videoRegistry = await Videos.deployed()
  await deployer.deploy(Store, paratiiRegistry.address)
  let videoStore = await Store.deployed()
  paratiiRegistry.registerAddress('Avatar', avatar.address)
  paratiiRegistry.registerAddress('ParatiiToken', paratiiToken.address)
  paratiiRegistry.registerAddress('SendEther', sendEther.address)
  paratiiRegistry.registerAddress('Videos', videoRegistry.address)
  paratiiRegistry.registerAddress('Store', videoStore.address)
  // give 30 percent of each video to the redistribution pool
  paratiiRegistry.registerUint('VideoRedistributionPoolShare', 30 * 10 ** 18)
  avatar.addToWhitelist(videoStore.address)
}
